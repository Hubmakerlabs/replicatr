type Event = record {
  id : text;
  sig : text;
  content : text;
  kind : nat16;
  tags : vec vec text;
  pubkey : text;
  created_at : int64;
};
type Filter = record {
  ids : vec text;
  tags : vec KeyValuePair;
  search : text;
  limit : int64;
  since : int64;
  authors : vec text;
  until : int64;
  kinds : vec nat16;
};
type KeyValuePair = record { key : text; value : vec text };
service : {
  __get_candid_interface_tmp_hack : () -> (text) query;
  count_all_events : () -> (nat64) query;
  count_events : (Filter) -> (nat64) query;
  delete_event : (text) -> (text);
  get_all_events : () -> (vec record { text; Event }) query;
  get_events : (Filter) -> (vec Event) query;
  save_event : (Event) -> (text);
  save_events : (vec Event) -> (text);
  test : () -> (text) query;
}